spring.application.name=GlueAuth-Backend


#################### DATABASE #######################################
#---- Dev------
spring.datasource.url=jdbc:postgresql://localhost:5011/glue_auth_db?stringtype=unspecified
spring.datasource.username=postgres
spring.datasource.password=glue_auth_volume@123

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true


################### Mail Server Configuration ##########################
spring.mail.host=mail.privateemail.com
spring.mail.port=465
spring.mail.username=office@kibuti.co
spring.mail.password=Office@2030
spring.mail.protocol=smtps
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=false
spring.mail.properties.mail.smtp.ssl.enable=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000


spring.mail.properties.mail.debug=false


##################### ASYNC ###########################
spring.threads.virtual.enabled=true

############################### SERVER COMPRESSION CONFIGURATION ####################################
server.compression.enabled=true
server.compression.min-response-size=1024
server.compression.mime-types=text/html, text/plain, application/json, application/xml, text/javascript, application/javascript, application/x-javascript, text/css

##### JWT CONFIGURATION #####
app.jwt-secret=b79943ecd429541f7960138c5a8d53c926f8fe27c41354e8ced0d73fb5269353
app.jwt-expiration-milliseconds=604800000
app.jwt-refresh-token.expiration-days=365

# GitHub OAuth2 Configuration
# GitHub OAuth2 Configuration - Make sure these are correct
spring.security.oauth2.client.registration.github.client-id=Ov23lilcyRvEeuRrCdE7
spring.security.oauth2.client.registration.github.client-secret=c16ea05f2ce00e13cd1b0422f8b91b52e7a35a97
spring.security.oauth2.client.registration.github.redirect-uri=http://localhost:8080/api/account/oauth2/callback/github
spring.security.oauth2.client.registration.github.scope=user:email,read:user
spring.security.oauth2.client.registration.github.client-name=GitHub
spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user
spring.security.oauth2.client.provider.github.user-name-attribute=login


############## COOKIES MNG CONFIGURATION ######################
app.cookie.domain=localhost
app.cookie.secured=false
app.cookie.access-token.expiry-seconds=604800
app.cookie.refresh-token.expiry-seconds=31536000
app.cookie.same-site=Lax

###### DEFAULTS REDIRECT URI ######
app.oauth2.default-redirect-url=http://localhost:8080/test/hello

# Add these to application.properties for detailed OAuth debugging
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.oauth2=DEBUG
logging.level.org.springframework.web.client.RestTemplate=DEBUG

# Add this to your existing application.properties

# Frontend application configuration
app.frontend.baseUrl=http://localhost:5173
app.oauth2.redirectUri=${app.frontend.baseUrl}/oauth2/callback

# Update these existing properties to use the frontend URL
glue.auth.email.verify-frontend.base.uri=${app.frontend.baseUrl}

# CORS Configuration - explicitly allow your frontend domain
app.cors.allowed-origins=${app.frontend.baseUrl}
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.cors.allowed-headers=Authorization,Content-Type,X-XSRF-TOKEN
app.cors.allow-credentials=true

